{
  "contractName": "Roulette",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bet",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_seed",
          "type": "uint256"
        }
      ],
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "qid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betSize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "betNumber",
          "type": "uint8"
        }
      ],
      "name": "Bet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "qid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "Payout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "qid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betSize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "betNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "winningNumber",
          "type": "uint8"
        }
      ],
      "name": "Play",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "backedToken",
      "outputs": [
        {
          "internalType": "contract BackedToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceForBacking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "number",
          "type": "uint8"
        }
      ],
      "name": "bet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "qid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxBet",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oraclizeFeeEstimate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"roscoinAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"qid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"betNumber\",\"type\":\"uint8\"}],\"name\":\"Bet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"qid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"qid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"betNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"winningNumber\",\"type\":\"uint8\"}],\"name\":\"Play\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"qid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"backedToken\",\"outputs\":[{\"internalType\":\"contract BackedToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceForBacking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"}],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxBet\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oraclizeFeeEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aniruddh Radhakrishnan and Shivansh Singh\",\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"Uses the `players` mapping to retrieve a player's information, deletes the player information afterwards.Emits Play event.\",\"params\":{\"qid\":\"The query id of the corresponding Oraclize query.\",\"result\":\"The result of the Oraclize query.\"}},\"bet(uint8)\":{\"details\":\"Updates token price according to value change.Stores the player info in `players` mapping so it can be retrieved in `__callback()`.Emits Bet event.\",\"params\":{\"number\":\"The number that is bet on.\"}},\"deposit()\":{\"details\":\"Funds are added to balanceForBacking as well.\"},\"maxBet()\":{\"details\":\"Based on empirical statistics (see docs/max_bet_size.md).\",\"return\":\"The maximum bet.\"},\"oraclizeFeeEstimate()\":{\"return\":\"An estimate of the oraclize fee.\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"},\"withdraw(uint256)\":{\"details\":\"Funds are removed from balanceForBacking as well.\",\"params\":{\"ethAmount\":\"The amount of eth to withdraw.\"}}},\"title\":\"Roulette\"},\"userdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"notice\":\"Callback function for Oraclize, checks if the player won the bet, and payd out if they did.\"},\"bet(uint8)\":{\"notice\":\"Bets an amount of eth on a specific number.\"},\"deposit()\":{\"notice\":\"Allows the backed token to deposit funds into the contract.\"},\"maxBet()\":{\"notice\":\"Returns the maximum bet (0.5% of balance) for this contract.\"},\"oraclizeFeeEstimate()\":{\"notice\":\"Returns an estimate of the oraclize fee.\"},\"withdraw(uint256)\":{\"notice\":\"Allows the backed token to withdraw funds from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/rosco/repos/ethereum/eth.x/contracts/Roulette.sol\":\"Roulette\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/rosco/repos/ethereum/eth.x/contracts/BackedToken.sol\":{\"keccak256\":\"0x333f4a7e5895af51d9150ee620a176207089f789403a7e318413237c1edcdce6\",\"urls\":[\"bzz-raw://6c72631f9239d5851ef251f12e058f1f79929c054d10b796b43bb901fed1684b\",\"dweb:/ipfs/QmZGz3tRc8RkhAwyDHRK7WrSPCL2MwNG71ngZdtztVmbFU\"]},\"/Users/rosco/repos/ethereum/eth.x/contracts/BackingContract.sol\":{\"keccak256\":\"0xb9fa1f8f3e7bc64ae87be1931574dcd4a5b4aed93e205ea0201bd83633b332f3\",\"urls\":[\"bzz-raw://43588dcb91677f61a32570e292936167ef81c3182a8d9c05a36056329d8e2c88\",\"dweb:/ipfs/QmVjyupXSKZoNAjuDSKULmatMmeNRHuKuiN4osnwrjUfhL\"]},\"/Users/rosco/repos/ethereum/eth.x/contracts/Roulette.sol\":{\"keccak256\":\"0x4da457a541d0c4ad1d9ab22cdfcbe9fa61ec2e04e290382274adaaace9815a80\",\"urls\":[\"bzz-raw://0ebea514fe2425aefe07091db6f3c1195062445a3c8c24d1c5ea927cda1c6630\",\"dweb:/ipfs/QmTE6zBycotcMUXTQTadbw5BpTMmEJ4ZRym1bSppiX79Zc\"]},\"/Users/rosco/repos/ethereum/eth.x/contracts/oraclizeAPI.sol\":{\"keccak256\":\"0x6c085ab0ea272072cfe040292f7fee8e649293bc70ab6643089e542eca491e7b\",\"urls\":[\"bzz-raw://34e8caf05a9662c2e6265f86c908e40005f50885d01b43a5a09887ed1800ca91\",\"dweb:/ipfs/QmPxxiB69qSaFHMbSRiL6gxQhCb44134jpiZSQGqKqQjJ9\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"openzeppelin-solidity/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xf6826c684d51ca28db5293ce11a54c5cca1c757b6cd32b87613833c65086f995\",\"urls\":[\"bzz-raw://c7567f010ac880ffd52ab8c77da2990cbb2a023b967ca1570bfd78290df7119b\",\"dweb:/ipfs/QmTJQMxPH9ZqzKnaHY2ZDuumL2VQsky5MWkoqoFqHLBomq\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x609f8cb524cd6b502624c79c099ec2fc6f23eef57b5c38e28efd82490875f37e\",\"urls\":[\"bzz-raw://3f1a4ce1e32696cbfc3441c5c8a554842783a786bdf4cd2f2e0a1304317a53da\",\"dweb:/ipfs/QmYeYyKmfvg392XU1k82ZjW11HDqJWFN9AmW2n9LuRDWaw\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200325b3803806200325b833981810160405260208110156200003757600080fd5b8101908080519060200190929190505050806200005a336200017960201b60201c565b6000600660006101000a81548160ff02191690831515021790555080600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d63fedc5306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156200015857600080fd5b505af11580156200016d573d6000803e3d6000fd5b5050505050506200039e565b62000194816005620001da60201b620026361790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b620001ec8282620002be60201b60201c565b1562000260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000347576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620032396022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612e8b80620003ae6000396000f3fe6080604052600436106100e85760003560e01c80636ef8d66d1161008a5780639a26c0c4116100595780639a26c0c41461052b578063d0821b0e14610556578063d0e30db014610587578063ea3f73ad14610591576100e8565b80636ef8d66d1461045557806382dc1ec41461046c5780638456cb59146104bd5780638e6b523e146104d4576100e8565b806338bbfa50116100c657806338bbfa501461023d5780633f4ba83a146103a657806346fbf68e146103bd5780635c975abb14610426576100e8565b806327dc297e146101055780632e1a7d4d146101d75780632e5b216814610212575b6100fd346007546105bc90919063ffffffff16565b600781905550005b34801561011157600080fd5b506101d56004803603604081101561012857600080fd5b81019080803590602001909291908035906020019064010000000081111561014f57600080fd5b82018360208201111561016157600080fd5b8035906020019184600183028401116401000000008311171561018357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610644565b005b3480156101e357600080fd5b50610210600480360360208110156101fa57600080fd5b81019080803590602001909291905050506109c5565b005b34801561021e57600080fd5b50610227610bd7565b6040518082815260200191505060405180910390f35b34801561024957600080fd5b506103a46004803603606081101561026057600080fd5b81019080803590602001909291908035906020019064010000000081111561028757600080fd5b82018360208201111561029957600080fd5b803590602001918460018302840111640100000000831117156102bb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561031e57600080fd5b82018360208201111561033057600080fd5b8035906020019184600183028401116401000000008311171561035257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bfd565b005b3480156103b257600080fd5b506103bb610c02565b005b3480156103c957600080fd5b5061040c600480360360208110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d62565b604051808215151515815260200191505060405180910390f35b34801561043257600080fd5b5061043b610d7f565b604051808215151515815260200191505060405180910390f35b34801561046157600080fd5b5061046a610d96565b005b34801561047857600080fd5b506104bb6004803603602081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da1565b005b3480156104c957600080fd5b506104d2610e0b565b005b3480156104e057600080fd5b506104e9610f6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053757600080fd5b50610540610f92565b6040518082815260200191505060405180910390f35b6105856004803603602081101561056c57600080fd5b81019080803560ff169060200190929190505050610f98565b005b61058f6112ba565b005b34801561059d57600080fd5b506105a661137d565b6040518082815260200191505060405180910390f35b60008082840190508381101561063a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61064c61138c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cb86031913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166008600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5175657279206e6565647320616e206173736f63696174656420706c6179657281525060200191505060405180910390fd5b60006107b3826116a9565b905060006008600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f91be5b5d42b869d0275147918e4b559f9d2d696bc711937642c9363242ef11008583600101548460020160009054906101000a900460ff1686604051808581526020018481526020018360ff1660ff1681526020018260ff1660ff16815260200194505050505060405180910390a261089081600101546007546105bc90919063ffffffff16565b6007819055508160ff168160020160009054906101000a900460ff1660ff1614156109655760008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006108f8602484600101546116bd90919063ffffffff16565b905060086000878152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff0219169055505061095e828783611743565b50506109bf565b60086000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550505b50505050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612ce9602f913960400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1631811115610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d486022913960400191505060405180910390fd5b600754811115610b36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612c8a602e913960400191505060405180910390fd5b610b4b816007546118c990919063ffffffff16565b600781905550600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610bbb57600080fd5b505af1158015610bcf573d6000803e3d6000fd5b505050505050565b6000610be161137d565b610bf760c860075461195290919063ffffffff16565b01905090565b505050565b610c0b33610d62565b610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d186030913960400191505060405180910390fd5b600660009054906101000a900460ff16610ce2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000610d788260056119e190919063ffffffff16565b9050919050565b6000600660009054906101000a900460ff16905090565b610d9f33611abf565b565b610daa33610d62565b610dff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d186030913960400191505060405180910390fd5b610e0881611b19565b50565b610e1433610d62565b610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d186030913960400191505060405180910390fd5b600660009054906101000a900460ff1615610eec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600660009054906101000a900460ff161561101b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b611023610bd7565b34111561107b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612d6a6026913960400191505060405180910390fd5b60006110bb6040518060400160405280600c81526020017f576f6c6672616d416c7068610000000000000000000000000000000000000000815250611b73565b9050803411611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e08602d913960400191505060405180910390fd5b6000813403905060006111926040518060400160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040518060400160405280601f81526020017f72616e646f6d20696e7465676572206265747765656e203020616e6420333600815250611f04565b905060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018560ff168152506008600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff021916908360ff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f214ae1d1aa57aeaec2e90ff231808911a5a626a3c6bc242503a829db732011ce828487604051808481526020018381526020018260ff1660ff168152602001935050505060405180910390a250505050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612ce9602f913960400191505060405180910390fd5b611375346007546105bc90919063ffffffff16565b600781905550565b6000660e35fa931a0000905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061141457506000611412600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661244a565b145b15611425576114236000612455565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561148f57600080fd5b505af11580156114a3573d6000803e3d6000fd5b505050506040513d60208110156114b957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461160257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561158757600080fd5b505af115801561159b573d6000803e3d6000fd5b505050506040513d60208110156115b157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166957600080fd5b505afa15801561167d573d6000803e3d6000fd5b505050506040513d602081101561169357600080fd5b8101908080519060200190929190505050905090565b60006116b6826000612466565b9050919050565b6000808314156116d0576000905061173d565b60008284029050828482816116e157fe5b0414611738576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612de76021913960400191505060405180910390fd5b809150505b92915050565b6000811161179c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c676023913960400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163181111561180c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612d906036913960400191505060405180910390fd5b611821816007546118c990919063ffffffff16565b6007819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561186d573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff167f212950d8b6a2784adeaa8e088d070610bdfab9eaef5a7127d90118ec1cf34a618383604051808381526020018281526020019250505060405180910390a2505050565b600082821115611941576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008082116119c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b60008284816119d457fe5b0490508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612e356022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611ad381600561257990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b611b2d81600561263690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611bfb57506000611bf9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661244a565b145b15611c0c57611c0a6000612455565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611c7657600080fd5b505af1158015611c8a573d6000803e3d6000fd5b505050506040513d6020811015611ca057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611de957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d6e57600080fd5b505af1158015611d82573d6000803e3d6000fd5b505050506040513d6020811015611d9857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e76578082015181840152602081019050611e5b565b50505050905090810190601f168015611ea35780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611ec257600080fd5b505af1158015611ed6573d6000803e3d6000fd5b505050506040513d6020811015611eec57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f8c57506000611f8a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661244a565b145b15611f9d57611f9b6000612455565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561200757600080fd5b505af115801561201b573d6000803e3d6000fd5b505050506040513d602081101561203157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461217a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120ff57600080fd5b505af1158015612113573d6000803e3d6000fd5b505050506040513d602081101561212957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122095780820151818401526020810190506121ee565b50505050905090810190601f1680156122365780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561225557600080fd5b505af1158015612269573d6000803e3d6000fd5b505050506040513d602081101561227f57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156122b5576000801b915050612444565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612350578082015181840152602081019050612335565b50505050905090810190601f16801561237d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156123b657808201518184015260208101905061239b565b50505050905090810190601f1680156123e35780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561240457600080fd5b505af1158015612418573d6000803e3d6000fd5b50505050506040513d602081101561242f57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b600061245f612711565b9050919050565b600060608390506000809050600080905060008090505b835181101561255a57603084828151811061249457fe5b602001015160f81c60f81b60f81c60ff16101580156124d0575060398482815181106124bc57fe5b602001015160f81c60f81b60f81c60ff1611155b156125225781156124f35760008614156124e95761255a565b8580600190039650505b600a83029250603084828151811061250757fe5b602001015160f81c60f81b60f81c60ff16038301925061254d565b602e84828151811061253057fe5b602001015160f81c60f81b60f81c60ff16141561254c57600191505b5b808060010191505061247d565b50600085111561256d5784600a0a820291505b81935050505092915050565b61258382826119e1565b6125d8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612dc66021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61264082826119e1565b156126b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080612731731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61244a565b11156127d357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127ca6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b60006127f273c03a2615d5efaf5f49f60b7bb6583eaec212fdf161244a565b11156128945773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061288b6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b60006128b373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61244a565b11156129555773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061294c6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b600061297473146500cfd35b22e4a392fe0adc06de1a1368ed4861244a565b1115612a165773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612a0d6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b6000612a35736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561244a565b1115612a9957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612ba4565b6000612ab87320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61244a565b1115612b1c577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612ba4565b6000612b3b7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61244a565b1115612b9f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612ba4565b600090505b90565b8060029080519060200190612bbd929190612bc1565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c0257805160ff1916838001178555612c30565b82800160010185558215612c30579182015b82811115612c2f578251825591602001919060010190612c14565b5b509050612c3d9190612c41565b5090565b612c6391905b80821115612c5f576000816000905550600101612c47565b5090565b9056fe5061796f757420616d6f756e742073686f756c64206265206d6f7265207468616e203043616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636520666f72206261636b696e6743616e206f6e6c792062652063616c6c65642066726f6d206f7261636c697a652063616c6c6261636b206164647265737343616e206f6e6c792062652063616c6c656420627920746865206261636b656420746f6b656e20636f6e7472616374506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6543616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636542657420616d6f756e742063616e206e6f7420657863656564206d6178206265742073697a655061796f757420616d6f756e742073686f756c64206e6f74206265206d6f7265207468616e20636f6e74726163742062616c616e6365526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742657420616d6f756e742073686f756c6420626520686967686572207468616e206f7261636c697a6520666565526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72315820b45403686e89db2d4dc071816da5b06958717338f0166429b2797f479072252f64736f6c634300050c0032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80636ef8d66d1161008a5780639a26c0c4116100595780639a26c0c41461052b578063d0821b0e14610556578063d0e30db014610587578063ea3f73ad14610591576100e8565b80636ef8d66d1461045557806382dc1ec41461046c5780638456cb59146104bd5780638e6b523e146104d4576100e8565b806338bbfa50116100c657806338bbfa501461023d5780633f4ba83a146103a657806346fbf68e146103bd5780635c975abb14610426576100e8565b806327dc297e146101055780632e1a7d4d146101d75780632e5b216814610212575b6100fd346007546105bc90919063ffffffff16565b600781905550005b34801561011157600080fd5b506101d56004803603604081101561012857600080fd5b81019080803590602001909291908035906020019064010000000081111561014f57600080fd5b82018360208201111561016157600080fd5b8035906020019184600183028401116401000000008311171561018357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610644565b005b3480156101e357600080fd5b50610210600480360360208110156101fa57600080fd5b81019080803590602001909291905050506109c5565b005b34801561021e57600080fd5b50610227610bd7565b6040518082815260200191505060405180910390f35b34801561024957600080fd5b506103a46004803603606081101561026057600080fd5b81019080803590602001909291908035906020019064010000000081111561028757600080fd5b82018360208201111561029957600080fd5b803590602001918460018302840111640100000000831117156102bb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561031e57600080fd5b82018360208201111561033057600080fd5b8035906020019184600183028401116401000000008311171561035257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bfd565b005b3480156103b257600080fd5b506103bb610c02565b005b3480156103c957600080fd5b5061040c600480360360208110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d62565b604051808215151515815260200191505060405180910390f35b34801561043257600080fd5b5061043b610d7f565b604051808215151515815260200191505060405180910390f35b34801561046157600080fd5b5061046a610d96565b005b34801561047857600080fd5b506104bb6004803603602081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da1565b005b3480156104c957600080fd5b506104d2610e0b565b005b3480156104e057600080fd5b506104e9610f6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053757600080fd5b50610540610f92565b6040518082815260200191505060405180910390f35b6105856004803603602081101561056c57600080fd5b81019080803560ff169060200190929190505050610f98565b005b61058f6112ba565b005b34801561059d57600080fd5b506105a661137d565b6040518082815260200191505060405180910390f35b60008082840190508381101561063a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61064c61138c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cb86031913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166008600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5175657279206e6565647320616e206173736f63696174656420706c6179657281525060200191505060405180910390fd5b60006107b3826116a9565b905060006008600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f91be5b5d42b869d0275147918e4b559f9d2d696bc711937642c9363242ef11008583600101548460020160009054906101000a900460ff1686604051808581526020018481526020018360ff1660ff1681526020018260ff1660ff16815260200194505050505060405180910390a261089081600101546007546105bc90919063ffffffff16565b6007819055508160ff168160020160009054906101000a900460ff1660ff1614156109655760008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006108f8602484600101546116bd90919063ffffffff16565b905060086000878152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff0219169055505061095e828783611743565b50506109bf565b60086000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550505b50505050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612ce9602f913960400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1631811115610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d486022913960400191505060405180910390fd5b600754811115610b36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612c8a602e913960400191505060405180910390fd5b610b4b816007546118c990919063ffffffff16565b600781905550600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610bbb57600080fd5b505af1158015610bcf573d6000803e3d6000fd5b505050505050565b6000610be161137d565b610bf760c860075461195290919063ffffffff16565b01905090565b505050565b610c0b33610d62565b610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d186030913960400191505060405180910390fd5b600660009054906101000a900460ff16610ce2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000610d788260056119e190919063ffffffff16565b9050919050565b6000600660009054906101000a900460ff16905090565b610d9f33611abf565b565b610daa33610d62565b610dff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d186030913960400191505060405180910390fd5b610e0881611b19565b50565b610e1433610d62565b610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d186030913960400191505060405180910390fd5b600660009054906101000a900460ff1615610eec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600660009054906101000a900460ff161561101b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b611023610bd7565b34111561107b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612d6a6026913960400191505060405180910390fd5b60006110bb6040518060400160405280600c81526020017f576f6c6672616d416c7068610000000000000000000000000000000000000000815250611b73565b9050803411611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e08602d913960400191505060405180910390fd5b6000813403905060006111926040518060400160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040518060400160405280601f81526020017f72616e646f6d20696e7465676572206265747765656e203020616e6420333600815250611f04565b905060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018560ff168152506008600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff021916908360ff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f214ae1d1aa57aeaec2e90ff231808911a5a626a3c6bc242503a829db732011ce828487604051808481526020018381526020018260ff1660ff168152602001935050505060405180910390a250505050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612ce9602f913960400191505060405180910390fd5b611375346007546105bc90919063ffffffff16565b600781905550565b6000660e35fa931a0000905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061141457506000611412600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661244a565b145b15611425576114236000612455565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561148f57600080fd5b505af11580156114a3573d6000803e3d6000fd5b505050506040513d60208110156114b957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461160257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561158757600080fd5b505af115801561159b573d6000803e3d6000fd5b505050506040513d60208110156115b157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166957600080fd5b505afa15801561167d573d6000803e3d6000fd5b505050506040513d602081101561169357600080fd5b8101908080519060200190929190505050905090565b60006116b6826000612466565b9050919050565b6000808314156116d0576000905061173d565b60008284029050828482816116e157fe5b0414611738576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612de76021913960400191505060405180910390fd5b809150505b92915050565b6000811161179c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c676023913960400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163181111561180c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612d906036913960400191505060405180910390fd5b611821816007546118c990919063ffffffff16565b6007819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561186d573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff167f212950d8b6a2784adeaa8e088d070610bdfab9eaef5a7127d90118ec1cf34a618383604051808381526020018281526020019250505060405180910390a2505050565b600082821115611941576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008082116119c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b60008284816119d457fe5b0490508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612e356022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611ad381600561257990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b611b2d81600561263690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611bfb57506000611bf9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661244a565b145b15611c0c57611c0a6000612455565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611c7657600080fd5b505af1158015611c8a573d6000803e3d6000fd5b505050506040513d6020811015611ca057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611de957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d6e57600080fd5b505af1158015611d82573d6000803e3d6000fd5b505050506040513d6020811015611d9857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e76578082015181840152602081019050611e5b565b50505050905090810190601f168015611ea35780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611ec257600080fd5b505af1158015611ed6573d6000803e3d6000fd5b505050506040513d6020811015611eec57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f8c57506000611f8a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661244a565b145b15611f9d57611f9b6000612455565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561200757600080fd5b505af115801561201b573d6000803e3d6000fd5b505050506040513d602081101561203157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461217a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156120ff57600080fd5b505af1158015612113573d6000803e3d6000fd5b505050506040513d602081101561212957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122095780820151818401526020810190506121ee565b50505050905090810190601f1680156122365780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561225557600080fd5b505af1158015612269573d6000803e3d6000fd5b505050506040513d602081101561227f57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156122b5576000801b915050612444565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612350578082015181840152602081019050612335565b50505050905090810190601f16801561237d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156123b657808201518184015260208101905061239b565b50505050905090810190601f1680156123e35780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561240457600080fd5b505af1158015612418573d6000803e3d6000fd5b50505050506040513d602081101561242f57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b600061245f612711565b9050919050565b600060608390506000809050600080905060008090505b835181101561255a57603084828151811061249457fe5b602001015160f81c60f81b60f81c60ff16101580156124d0575060398482815181106124bc57fe5b602001015160f81c60f81b60f81c60ff1611155b156125225781156124f35760008614156124e95761255a565b8580600190039650505b600a83029250603084828151811061250757fe5b602001015160f81c60f81b60f81c60ff16038301925061254d565b602e84828151811061253057fe5b602001015160f81c60f81b60f81c60ff16141561254c57600191505b5b808060010191505061247d565b50600085111561256d5784600a0a820291505b81935050505092915050565b61258382826119e1565b6125d8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612dc66021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61264082826119e1565b156126b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080612731731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61244a565b11156127d357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127ca6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b60006127f273c03a2615d5efaf5f49f60b7bb6583eaec212fdf161244a565b11156128945773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061288b6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b60006128b373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61244a565b11156129555773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061294c6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b600061297473146500cfd35b22e4a392fe0adc06de1a1368ed4861244a565b1115612a165773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612a0d6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612ba7565b60019050612ba4565b6000612a35736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561244a565b1115612a9957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612ba4565b6000612ab87320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61244a565b1115612b1c577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612ba4565b6000612b3b7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61244a565b1115612b9f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612ba4565b600090505b90565b8060029080519060200190612bbd929190612bc1565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c0257805160ff1916838001178555612c30565b82800160010185558215612c30579182015b82811115612c2f578251825591602001919060010190612c14565b5b509050612c3d9190612c41565b5090565b612c6391905b80821115612c5f576000816000905550600101612c47565b5090565b9056fe5061796f757420616d6f756e742073686f756c64206265206d6f7265207468616e203043616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636520666f72206261636b696e6743616e206f6e6c792062652063616c6c65642066726f6d206f7261636c697a652063616c6c6261636b206164647265737343616e206f6e6c792062652063616c6c656420627920746865206261636b656420746f6b656e20636f6e7472616374506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6543616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636542657420616d6f756e742063616e206e6f7420657863656564206d6178206265742073697a655061796f757420616d6f756e742073686f756c64206e6f74206265206d6f7265207468616e20636f6e74726163742062616c616e6365526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742657420616d6f756e742073686f756c6420626520686967686572207468616e206f7261636c697a6520666565526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72315820b45403686e89db2d4dc071816da5b06958717338f0166429b2797f479072252f64736f6c634300050c0032",
  "sourceMap": "224:4109:4:-;;;714:85;8:9:-1;5:2;;;30:1;27;20:12;5:2;714:85:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;714:85:4;;;;;;;;;;;;;;;;774:14;275:22:8;286:10;275;;;:22;;:::i;:::-;985:5:9;975:7;;:15;;;;;;;;;;;;;;;;;;922:18:1;896:11;;:45;;;;;;;;;;;;;;;;;;951:11;;;;;;;;;;;:16;;;976:4;951:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;951:31:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;951:31:1;;;;831:158;714:85:4;224:4109;;737:119:8;793:21;806:7;793:8;:12;;;;;;:21;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;260:175:7:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;224:4109:4:-;;;;;;;",
  "deployedSourceMap": "224:4109:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:32:1;666:9;644:17;;:21;;:32;;;;:::i;:::-;624:17;:52;;;;224:4109:4;2156:873;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2156:873:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2156:873:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2156:873:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2156:873:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2156:873:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2156:873:4;;;;;;;;;;;;;;;:::i;:::-;;1480:369:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1480:369:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1480:369:1;;;;;;;;;;;;;;;;;:::i;:::-;;3980:129:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3980:129:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14929:166:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:6;;;;;;;;;;;;;;;:::i;:::-;;1852:115:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1852:115:9;;;:::i;:::-;;447:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;447:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;447:107:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1092:76:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1092:76:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;656:75:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;656:75:8;;;:::i;:::-;;560:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:90:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;560:90:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1649:113:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1649:113:9;;;:::i;:::-;;258:30:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;258:30:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;294:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:32:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1114:642:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1114:642:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1144:121:1;;;:::i;:::-;;4235:96:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4235:96:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;834:176:10;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2156:873:4:-;2250:20;:18;:20::i;:::-;2236:34;;:10;:34;;;2228:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2373:1;2342:33;;:7;:12;2350:3;2342:12;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;;2334:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:19;2451:16;2460:6;2451:8;:16::i;:::-;2423:45;;2478:29;2510:7;:12;2518:3;2510:12;;;;;;;;;;;2478:44;;2543:10;:17;;;;;;;;;;;;2538:85;;;2562:3;2567:10;:18;;;2587:10;:20;;;;;;;;;;;;2609:13;2538:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2653:41;2675:10;:18;;;2653:17;;:21;;:41;;;;:::i;:::-;2633:17;:61;;;;2733:13;2709:37;;:10;:20;;;;;;;;;;;;:37;;;2705:318;;;2762:29;2794:10;:17;;;;;;;;;;;;2762:49;;2825:20;2848:26;2871:2;2848:10;:18;;;:22;;:26;;;;:::i;:::-;2825:49;;2895:7;:12;2903:3;2895:12;;;;;;;;;;;;2888:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2922:40;2929:13;2944:3;2949:12;2922:6;:40::i;:::-;2705:318;;;;;3000:7;:12;3008:3;3000:12;;;;;;;;;;;;2993:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2705:318;2156:873;;;;:::o;1480:369:1:-;400:11;;;;;;;;;;;378:34;;:10;:34;;;370:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1581:4;1573:21;;;1560:9;:34;;1552:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:17;;1651:9;:30;;1643:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:32;1784:9;1762:17;;:21;;:32;;;;:::i;:::-;1742:17;:52;;;;1804:11;;;;;;;;;;;:19;;;1830:9;1804:38;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1804:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1804:38:1;;;;;1480:369;:::o;3980:129:4:-;4019:14;4081:21;:19;:21::i;:::-;4052:26;4074:3;4052:17;;:21;;:26;;;;:::i;:::-;:50;4045:57;;3980:129;:::o;14929:166:6:-;;;;:::o;1852:115:9:-;350:20:8;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:7:9;;;;;;;;;;;1504:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:5;1910:7;;:15;;;;;;;;;;;;;;;;;;1940:20;1949:10;1940:20;;;;;;;;;;;;;;;;;;;;;;1852:115::o;447:107:8:-;503:4;526:21;539:7;526:8;:12;;:21;;;;:::i;:::-;519:28;;447:107;;;:::o;1092:76:9:-;1131:4;1154:7;;;;;;;;;;;1147:14;;1092:76;:::o;656:75:8:-;699:25;713:10;699:13;:25::i;:::-;656:75::o;560:90::-;350:20;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:19;635:7;624:10;:19::i;:::-;560:90;:::o;1649:113:9:-;350:20:8;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:7:9;;;;;;;;;;;1320:8;1312:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:4;1708:7;;:14;;;;;;;;;;;;;;;;;;1737:18;1744:10;1737:18;;;;;;;;;;;;;;;;;;;;;;1649:113::o;258:30:1:-;;;;;;;;;;;;;:::o;294:32::-;;;;:::o;1114:642:4:-;1321:7:9;;;;;;;;;;;1320:8;1312:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:8:4;:6;:8::i;:::-;1190:9;:21;;1182:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:19;1287:33;;;;;;;;;;;;;;;;;;:17;:33::i;:::-;1265:55;;1350:11;1338:9;:23;1330:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:16;1453:11;1441:9;:23;1422:42;;1475:11;1489:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:65::i;:::-;1475:79;;1656:40;;;;;;;;1667:10;1656:40;;;;;;1679:8;1656:40;;;;1689:6;1656:40;;;;;1641:7;:12;1649:3;1641:12;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:10;1711:38;;;1727:3;1732:8;1742:6;1711:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:1:9;;;1114:642:4;:::o;1144:121:1:-;400:11;;;;;;;;;;;378:34;;:10;:34;;;370:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:32;1248:9;1226:17;;:21;;:32;;;;:::i;:::-;1206:17;:52;;;;1144:121::o;4235:96:4:-;4287:7;4313:11;4306:18;;4235:96;:::o;36649:130:6:-;36709:24;11830:1;11806:26;;11814:3;;;;;;;;;;;11806:26;;;11805:64;;;;11867:1;11838:25;11858:3;;;;;;;;;;;11838:11;:25::i;:::-;:30;11805:64;11801:130;;;11885:35;11462:1;11885:19;:35::i;:::-;;11801:130;11965:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11965:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11965:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11965:16:6;;;;;;;;;;;;;;;;11944:37;;11952:8;;;;;;;;;;;11944:37;;;11940:106;;12018:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12018:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12018:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12018:16:6;;;;;;;;;;;;;;;;11997:8;;:38;;;;;;;;;;;;;;;;;;11940:106;36752:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36752:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36752:20:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;36752:20:6;;;;;;;;;;;;;;;;36745:27;;36649:130;:::o;42348:115::-;42407:15;42441;42450:2;42454:1;42441:8;:15::i;:::-;42434:22;;42348:115;;;:::o;1693:458:10:-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;3374:406:4:-;3471:1;3462:6;:10;3454:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:4;3540:21;;;3530:6;:31;;3522:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3651:29;3673:6;3651:17;;:21;;:29;;;;:::i;:::-;3631:17;:49;;;;3706:6;3690:33;;:41;3724:6;3690:41;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3690:41:4;3753:6;3746:27;;;3761:3;3766:6;3746:27;;;;;;;;;;;;;;;;;;;;;;;;3374:406;;;:::o;1274:179:10:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;779:200:7:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;862:127:8:-;921:24;937:7;921:8;:15;;:24;;;;:::i;:::-;974:7;960:22;;;;;;;;;;;;862:127;:::o;737:119::-;793:21;806:7;793:8;:12;;:21;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;15101:156:6:-;15185:16;11830:1;11806:26;;11814:3;;;;;;;;;;;11806:26;;;11805:64;;;;11867:1;11838:25;11858:3;;;;;;;;;;;11838:11;:25::i;:::-;:30;11805:64;11801:130;;;11885:35;11462:1;11885:19;:35::i;:::-;;11801:130;11965:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11965:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11965:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11965:16:6;;;;;;;;;;;;;;;;11944:37;;11952:8;;;;;;;;;;;11944:37;;;11940:106;;12018:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12018:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12018:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12018:16:6;;;;;;;;;;;;;;;;11997:8;;:38;;;;;;;;;;;;;;;;;;11940:106;15220:8;;;;;;;;;;;:17;;;15238:11;15220:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15220:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15220:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15220:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15220:30:6;;;;;;;;;;;;;;;;15213:37;;15101:156;;;:::o;15452:353::-;15553:11;11830:1;11806:26;;11814:3;;;;;;;;;;;11806:26;;;11805:64;;;;11867:1;11838:25;11858:3;;;;;;;;;;;11838:11;:25::i;:::-;:30;11805:64;11801:130;;;11885:35;11462:1;11885:19;:35::i;:::-;;11801:130;11965:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11965:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11965:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11965:16:6;;;;;;;;;;;;;;;;11944:37;;11952:8;;;;;;;;;;;11944:37;;;11940:106;;12018:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12018:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12018:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12018:16:6;;;;;;;;;;;;;;;;11997:8;;:38;;;;;;;;;;;;;;;;;;11940:106;15576:10;15589:8;;;;;;;;;;;:17;;;15607:11;15589:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15589:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15589:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15589:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15589:30:6;;;;;;;;;;;;;;;;15576:43;;15665:6;15651:11;:20;15641:7;:30;15633:5;:38;15629:104;;;15694:1;15687:8;;;;;;;15629:104;15749:8;;;;;;;;;;;:14;;;15770:5;15777:1;15780:11;15793:4;15749:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15749:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15749:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15749:49:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15749:49:6;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15749:49:6;;;;;;;;;;;;;;;;15742:56;;;12055:1;15452:353;;;;:::o;36785:147::-;36844:10;36910:5;36898:18;36889:27;;36875:51;;;:::o;12538:199::-;12603:16;12636:21;:19;:21::i;:::-;12629:28;;12538:199;;;:::o;42469:796::-;42537:15;42564:20;42593:2;42564:32;;42606:9;42618:1;42606:13;;42629;42645:5;42629:21;;42665:6;42674:1;42665:10;;42660:516;42681:7;:14;42677:1;:18;42660:516;;;42748:2;42732:7;42740:1;42732:10;;;;;;;;;;;;;;;;42726:17;;42721:23;;:29;;42720:66;;;;;42783:2;42767:7;42775:1;42767:10;;;;;;;;;;;;;;;;42761:17;;42756:23;;:29;;42720:66;42716:450;;;42810:8;42806:175;;;42851:1;42845:2;:7;42841:122;;;42879:5;;42841:122;42937:4;;;;;;;;42806:175;43006:2;42998:10;;;;43060:2;43045:7;43053:1;43045:10;;;;;;;;;;;;;;;;43039:17;;43034:23;;:28;43026:36;;;;42716:450;;;43114:2;43098:7;43106:1;43098:10;;;;;;;;;;;;;;;;43092:17;;43087:23;;:29;43083:83;;;43147:4;43136:15;;43083:83;42716:450;42697:3;;;;;;;42660:516;;;;43194:1;43189:2;:6;43185:53;;;43225:2;43219;:8;43211:16;;;;43185:53;43254:4;43247:11;;;;;42469:796;;;;:::o;510:180:7:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;13011:1784:6:-;13060:16;13150:1;13092:55;13104:42;13092:11;:55::i;:::-;:59;13088:248;;;13205:42;13177:3;;:71;;;;;;;;;;;;;;;;;;13262:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13321:4;13314:11;;;;13088:248;13407:1;13349:55;13361:42;13349:11;:55::i;:::-;:59;13345:257;;;13470:42;13442:3;;:71;;;;;;;;;;;;;;;;;;13527:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13587:4;13580:11;;;;13345:257;13673:1;13615:55;13627:42;13615:11;:55::i;:::-;:59;13611:252;;;13734:42;13706:3;;:71;;;;;;;;;;;;;;;;;;13791:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13848:4;13841:11;;;;13611:252;13934:1;13876:55;13888:42;13876:11;:55::i;:::-;:59;13872:256;;;13997:42;13969:3;;:71;;;;;;;;;;;;;;;;;;14054:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14113:4;14106:11;;;;13872:256;14199:1;14141:55;14153:42;14141:11;:55::i;:::-;:59;14137:204;;;14262:42;14234:3;;:71;;;;;;;;;;;;;;;;;;14326:4;14319:11;;;;14137:204;14412:1;14354:55;14366:42;14354:11;:55::i;:::-;:59;14350:203;;;14474:42;14446:3;;:71;;;;;;;;;;;;;;;;;;14538:4;14531:11;;;;14350:203;14624:1;14566:55;14578:42;14566:11;:55::i;:::-;:59;14562:205;;;14688:42;14660:3;;:71;;;;;;;;;;;;;;;;;;14752:4;14745:11;;;;14562:205;14783:5;14776:12;;13011:1784;;:::o;12743:125::-;12848:13;12824:21;:37;;;;;;;;;;;;:::i;:::-;;12743:125;:::o;224:4109:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./BackingContract.sol\";\nimport \"./oraclizeAPI.sol\";\nimport \"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\";\n\n/**\n * @title Roulette\n */\ncontract Roulette is usingOraclize, Pausable, BackingContract {\n    struct PlayerInfo {\n        address payable player;\n        uint256 betSize;\n        uint8 betNumber;\n    }\n\n    mapping(bytes32=>PlayerInfo) players;\n\n    event Bet(address indexed player, bytes32 qid, uint256 betSize, uint8 betNumber);\n    event Play(address indexed player, bytes32 qid, uint256 betSize, uint8 betNumber, uint8 winningNumber);\n    event Payout(address indexed winner, bytes32 qid, uint256 payout);\n\n    constructor(address payable walletAddress) BackingContract(Address) public {}\n\n    /**\n     * @notice Bets an amount of eth on a specific number.\n     * @dev Updates token price according to value change.\n     * @dev Stores the player info in `players` mapping so it can be retrieved in `__callback()`.\n     * @dev Emits Bet event.\n     * @param number The number that is bet on.\n     */\n    function bet(uint8 number) external payable whenNotPaused {\n        require(msg.value <= maxBet(), \"Bet amount can not exceed max bet size\");\n\n        uint256 oraclizeFee = oraclize_getPrice(\"WolframAlpha\");\n        require(msg.value > oraclizeFee, \"Bet amount should be higher than oraclize fee\");\n\n        uint256 betValue = msg.value - oraclizeFee;\n\n        bytes32 qid = oraclize_query(\"WolframAlpha\", \"random integer between 0 and 36\");\n\n        /* Store a player's info to retrieve it in the oraclize callback */\n        players[qid] = PlayerInfo(msg.sender, betValue, number);\n        emit Bet(msg.sender, qid, betValue, number);\n    }\n\n    /**\n     * @notice Callback function for Oraclize, checks if the player won the bet, and payd out if they did.\n     * @dev Uses the `players` mapping to retrieve a player's information, deletes the player information afterwards.\n     * @dev Emits Play event.\n     * @param qid The query id of the corresponding Oraclize query.\n     * @param result The result of the Oraclize query.\n     */\n    function __callback(bytes32 qid, string memory result) public {\n        require(msg.sender == oraclize_cbAddress(), \"Can only be called from oraclize callback address\");\n        require(players[qid].player != address(0), \"Query needs an associated player\");\n\n        uint8 winningNumber = uint8(parseInt(result));\n        PlayerInfo storage playerInfo = players[qid];\n\n        emit Play(playerInfo.player, qid, playerInfo.betSize, playerInfo.betNumber, winningNumber);\n        balanceForBacking = balanceForBacking.add(playerInfo.betSize);\n\n        if (playerInfo.betNumber == winningNumber) {\n            address payable playerAddress = playerInfo.player;\n            uint256 payoutAmount = playerInfo.betSize.mul(36);\n            delete players[qid];\n\n            payout(playerAddress, qid, payoutAmount);\n        } else {\n            delete players[qid];\n        }\n    }\n\n    /**\n     * @notice Pays out an amount of eth to a bet winner.\n     * @dev Updates token price according to value change.\n     * @dev Emits Payout event.\n     * @param winner The account of the bet winner.\n     * @param qid The game for which the payout is made\n     * @param amount The amount to be paid out to the bet winner.\n     */\n    function payout(address winner, bytes32 qid, uint256 amount) internal {\n        require(amount > 0, \"Payout amount should be more than 0\");\n        require(amount <= address(this).balance, \"Payout amount should not be more than contract balance\");\n\n        balanceForBacking = balanceForBacking.sub(amount);\n        address(uint160(winner)).transfer(amount);\n        emit Payout(winner, qid, amount);\n    }\n\n    /**\n     * @notice Returns the maximum bet (0.5% of balance) for this contract.\n     * @dev Based on empirical statistics (see docs/max_bet_size.md).\n     * @return The maximum bet.\n     */\n    function maxBet() public view returns (uint256 maxBet) {\n        return balanceForBacking.div(200) + oraclizeFeeEstimate();\n    }\n\n    /**\n     * @notice Returns an estimate of the oraclize fee.\n     * @return An estimate of the oraclize fee.\n     */\n    function oraclizeFeeEstimate() public pure returns (uint256) {\n        return 0.004 ether;\n    }\n}\n",
  "sourcePath": "/Users/rosco/repos/ethereum/eth.x/contracts/Roulette.sol",
  "ast": {
    "absolutePath": "/Users/rosco/repos/ethereum/eth.x/contracts/Roulette.sol",
    "exportedSymbols": {
      "Roulette": [
        769
      ]
    },
    "id": 770,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 476,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/rosco/repos/ethereum/eth.x/contracts/BackingContract.sol",
        "file": "./BackingContract.sol",
        "id": 477,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 403,
        "src": "25:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/rosco/repos/ethereum/eth.x/contracts/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 478,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 7117,
        "src": "57:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 479,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 7387,
        "src": "85:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 480,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7116,
              "src": "245:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7116",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 481,
            "nodeType": "InheritanceSpecifier",
            "src": "245:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 482,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7386,
              "src": "260:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$7386",
                "typeString": "contract Pausable"
              }
            },
            "id": 483,
            "nodeType": "InheritanceSpecifier",
            "src": "260:8:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 484,
              "name": "BackingContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 402,
              "src": "270:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BackingContract_$402",
                "typeString": "contract BackingContract"
              }
            },
            "id": 485,
            "nodeType": "InheritanceSpecifier",
            "src": "270:15:4"
          }
        ],
        "contractDependencies": [
          402,
          7116,
          7301,
          7386
        ],
        "contractKind": "contract",
        "documentation": "@title Roulette",
        "fullyImplemented": true,
        "id": 769,
        "linearizedBaseContracts": [
          769,
          402,
          7386,
          7301,
          7116
        ],
        "name": "Roulette",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Roulette.PlayerInfo",
            "id": 492,
            "members": [
              {
                "constant": false,
                "id": 487,
                "name": "player",
                "nodeType": "VariableDeclaration",
                "scope": 492,
                "src": "320:22:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 486,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:15:4",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 489,
                "name": "betSize",
                "nodeType": "VariableDeclaration",
                "scope": 492,
                "src": "352:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 488,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 491,
                "name": "betNumber",
                "nodeType": "VariableDeclaration",
                "scope": 492,
                "src": "377:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 490,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PlayerInfo",
            "nodeType": "StructDefinition",
            "scope": 769,
            "src": "292:107:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 496,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "405:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
              "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo)"
            },
            "typeName": {
              "id": 495,
              "keyType": {
                "id": 493,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "405:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 494,
                "name": "PlayerInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 492,
                "src": "422:10:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                  "typeString": "struct Roulette.PlayerInfo"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 506,
            "name": "Bet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "indexed": true,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "458:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 500,
                  "indexed": false,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "482:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "indexed": false,
                  "name": "betSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "495:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "indexed": false,
                  "name": "betNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "512:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "457:71:4"
            },
            "src": "448:81:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 518,
            "name": "Play",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "indexed": true,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "545:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "indexed": false,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "569:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "indexed": false,
                  "name": "betSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "582:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "name": "betNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "599:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "indexed": false,
                  "name": "winningNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "616:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:92:4"
            },
            "src": "534:103:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 526,
            "name": "Payout",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "655:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "indexed": false,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "679:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 524,
                  "indexed": false,
                  "name": "payout",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "692:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "654:53:4"
            },
            "src": "642:66:4"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "797:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 535,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 531,
                    "name": "walletAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 528,
                    "src": "774:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 532,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 530,
                  "name": "BackingContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "758:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BackingContract_$402_$",
                    "typeString": "type(contract BackingContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "758:31:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "walletAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "726:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:32:4"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:0:4"
            },
            "scope": 769,
            "src": "714:85:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "1172:584:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "1190:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1190:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 545,
                            "name": "maxBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "1203:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1203:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1190:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42657420616d6f756e742063616e206e6f7420657863656564206d6178206265742073697a65",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:40:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ea72281d4cb18f26b4db8aff3b88b8f2f00e50c75f5a430e80aa4712e748764",
                          "typeString": "literal_string \"Bet amount can not exceed max bet size\""
                        },
                        "value": "Bet amount can not exceed max bet size"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ea72281d4cb18f26b4db8aff3b88b8f2f00e50c75f5a430e80aa4712e748764",
                          "typeString": "literal_string \"Bet amount can not exceed max bet size\""
                        }
                      ],
                      "id": 542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "1182:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:72:4"
                },
                {
                  "assignments": [
                    552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 552,
                      "name": "oraclizeFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "1265:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 551,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1265:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576f6c6672616d416c706861",
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1305:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        "value": "WolframAlpha"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        }
                      ],
                      "id": 553,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1884,
                        1902
                      ],
                      "referencedDeclaration": 1884,
                      "src": "1287:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) returns (uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1265:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "1338:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1338:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 560,
                          "name": "oraclizeFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 552,
                          "src": "1350:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1338:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42657420616d6f756e742073686f756c6420626520686967686572207468616e206f7261636c697a6520666565",
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1363:47:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98eea70b75a595b66958bc23d3bea1922e7a685eedbc13e7256cf9e9ab374561",
                          "typeString": "literal_string \"Bet amount should be higher than oraclize fee\""
                        },
                        "value": "Bet amount should be higher than oraclize fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98eea70b75a595b66958bc23d3bea1922e7a685eedbc13e7256cf9e9ab374561",
                          "typeString": "literal_string \"Bet amount should be higher than oraclize fee\""
                        }
                      ],
                      "id": 557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "1330:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:81:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:81:4"
                },
                {
                  "assignments": [
                    566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "name": "betValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "1422:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1422:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 571,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8000,
                        "src": "1441:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1441:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 569,
                      "name": "oraclizeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "1453:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1441:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1422:42:4"
                },
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "name": "qid",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "1475:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1475:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 578,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576f6c6672616d416c706861",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1504:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        "value": "WolframAlpha"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72616e646f6d20696e7465676572206265747765656e203020616e64203336",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1520:33:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31eb75d01006bca80654310c3d2396372cca50656de178f344b039c1d4963c89",
                          "typeString": "literal_string \"random integer between 0 and 36\""
                        },
                        "value": "random integer between 0 and 36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31eb75d01006bca80654310c3d2396372cca50656de178f344b039c1d4963c89",
                          "typeString": "literal_string \"random integer between 0 and 36\""
                        }
                      ],
                      "id": 574,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1943,
                        1986,
                        2033,
                        2078,
                        2122,
                        2168,
                        2218,
                        2266,
                        2314,
                        2364,
                        2418,
                        2470,
                        2507,
                        2547,
                        2590,
                        2630,
                        2675,
                        2723,
                        2774,
                        2822,
                        2875,
                        2931,
                        2990,
                        3046,
                        3107,
                        3171,
                        3238,
                        3302,
                        3371,
                        3443,
                        3518,
                        3590,
                        3638,
                        3688,
                        3742,
                        3794,
                        3831,
                        3871,
                        3914,
                        3954,
                        3999,
                        4047,
                        4098,
                        4146,
                        4199,
                        4255,
                        4314,
                        4370,
                        4431,
                        4495,
                        4562,
                        4626,
                        4695,
                        4767,
                        4842,
                        4914
                      ],
                      "referencedDeclaration": 1943,
                      "src": "1489:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1475:79:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "1641:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                          "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                        }
                      },
                      "id": 581,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 580,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1649:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1641:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                        "typeString": "struct Roulette.PlayerInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 583,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "1667:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1667:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "betValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "1679:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 586,
                          "name": "number",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "1689:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 582,
                        "name": "PlayerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1656:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PlayerInfo_$492_storage_ptr_$",
                          "typeString": "type(struct Roulette.PlayerInfo storage pointer)"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1656:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PlayerInfo_$492_memory",
                        "typeString": "struct Roulette.PlayerInfo memory"
                      }
                    },
                    "src": "1641:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                      "typeString": "struct Roulette.PlayerInfo storage ref"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:55:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8000,
                          "src": "1715:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1715:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1727:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "betValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1732:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "number",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "1742:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 590,
                      "name": "Bet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "1711:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint8_$returns$__$",
                        "typeString": "function (address,bytes32,uint256,uint8)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "EmitStatement",
                  "src": "1706:43:4"
                }
              ]
            },
            "documentation": "@notice Bets an amount of eth on a specific number.\n@dev Updates token price according to value change.\n@dev Stores the player info in `players` mapping so it can be retrieved in `__callback()`.\n@dev Emits Bet event.\n@param number The number that is bet on.",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 540,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 539,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7342,
                  "src": "1158:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1158:13:4"
              }
            ],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1127:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:14:4"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:4"
            },
            "scope": 769,
            "src": "1114:642:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "2218:811:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 607,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "2236:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2236:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 609,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4939,
                            "src": "2250:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2250:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2236:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c65642066726f6d206f7261636c697a652063616c6c6261636b2061646472657373",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2272:51:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a71b512b172bca3e3fd7c37872a153f68ca36fd7f4eb0ebf6c0b9b03923fd1d",
                          "typeString": "literal_string \"Can only be called from oraclize callback address\""
                        },
                        "value": "Can only be called from oraclize callback address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a71b512b172bca3e3fd7c37872a153f68ca36fd7f4eb0ebf6c0b9b03923fd1d",
                          "typeString": "literal_string \"Can only be called from oraclize callback address\""
                        }
                      ],
                      "id": 606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "2228:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:96:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:96:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 616,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "2342:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                              }
                            },
                            "id": 618,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 617,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "2350:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2342:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                              "typeString": "struct Roulette.PlayerInfo storage ref"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "player",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 487,
                          "src": "2342:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2373:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2365:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2365:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2342:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5175657279206e6565647320616e206173736f63696174656420706c61796572",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2377:34:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5716a7205318af468f3f2813b80b9792272c494e747b810619d9fb89d44f407",
                          "typeString": "literal_string \"Query needs an associated player\""
                        },
                        "value": "Query needs an associated player"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5716a7205318af468f3f2813b80b9792272c494e747b810619d9fb89d44f407",
                          "typeString": "literal_string \"Query needs an associated player\""
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "2334:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:78:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:78:4"
                },
                {
                  "assignments": [
                    628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 628,
                      "name": "winningNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 696,
                      "src": "2423:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 627,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2423:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 634,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 631,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 603,
                            "src": "2460:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 630,
                          "name": "parseInt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            5772,
                            5889
                          ],
                          "referencedDeclaration": 5772,
                          "src": "2451:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (string memory) pure returns (uint256)"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2451:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2445:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2445:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2423:45:4"
                },
                {
                  "assignments": [
                    636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 636,
                      "name": "playerInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 696,
                      "src": "2478:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                        "typeString": "struct Roulette.PlayerInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 635,
                        "name": "PlayerInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 492,
                        "src": "2478:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                          "typeString": "struct Roulette.PlayerInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 640,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 637,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "2510:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                        "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                      }
                    },
                    "id": 639,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "qid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "2518:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2510:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                      "typeString": "struct Roulette.PlayerInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2478:44:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 642,
                          "name": "playerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "2543:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                            "typeString": "struct Roulette.PlayerInfo storage pointer"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "player",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 487,
                        "src": "2543:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "2562:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 645,
                          "name": "playerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "2567:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                            "typeString": "struct Roulette.PlayerInfo storage pointer"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "betSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 489,
                        "src": "2567:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 647,
                          "name": "playerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "2587:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                            "typeString": "struct Roulette.PlayerInfo storage pointer"
                          }
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "betNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 491,
                        "src": "2587:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "winningNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "2609:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 641,
                      "name": "Play",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "2538:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,bytes32,uint256,uint8,uint8)"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:85:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "EmitStatement",
                  "src": "2533:90:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 652,
                      "name": "balanceForBacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "2633:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 655,
                            "name": "playerInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "2675:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                              "typeString": "struct Roulette.PlayerInfo storage pointer"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "betSize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 489,
                          "src": "2675:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 653,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "2653:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7413,
                        "src": "2653:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2653:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2633:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:61:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "playerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "2709:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                          "typeString": "struct Roulette.PlayerInfo storage pointer"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "betNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 491,
                      "src": "2709:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 662,
                      "name": "winningNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "2733:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2709:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 694,
                    "nodeType": "Block",
                    "src": "2979:44:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2993:19:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 689,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "3000:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                              }
                            },
                            "id": 691,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 690,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "3008:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3000:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                              "typeString": "struct Roulette.PlayerInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 693,
                        "nodeType": "ExpressionStatement",
                        "src": "2993:19:4"
                      }
                    ]
                  },
                  "id": 695,
                  "nodeType": "IfStatement",
                  "src": "2705:318:4",
                  "trueBody": {
                    "id": 688,
                    "nodeType": "Block",
                    "src": "2748:225:4",
                    "statements": [
                      {
                        "assignments": [
                          665
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 665,
                            "name": "playerAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 688,
                            "src": "2762:29:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 664,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2762:15:4",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 668,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 666,
                            "name": "playerInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "2794:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                              "typeString": "struct Roulette.PlayerInfo storage pointer"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "player",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 487,
                          "src": "2794:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2762:49:4"
                      },
                      {
                        "assignments": [
                          670
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 670,
                            "name": "payoutAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 688,
                            "src": "2825:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 669,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2825:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 676,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3336",
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2871:2:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 671,
                                "name": "playerInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 636,
                                "src": "2848:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                                  "typeString": "struct Roulette.PlayerInfo storage pointer"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "betSize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 489,
                              "src": "2848:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7472,
                            "src": "2848:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2848:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2825:49:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2888:19:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 677,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "2895:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                              }
                            },
                            "id": 679,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 678,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "2903:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2895:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                              "typeString": "struct Roulette.PlayerInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "2888:19:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 683,
                              "name": "playerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 665,
                              "src": "2929:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 684,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "2944:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 685,
                              "name": "payoutAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "2949:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 682,
                            "name": "payout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "2922:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes32,uint256)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2922:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "2922:40:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Callback function for Oraclize, checks if the player won the bet, and payd out if they did.\n@dev Uses the `players` mapping to retrieve a player's information, deletes the player information afterwards.\n@dev Emits Play event.\n@param qid The query id of the corresponding Oraclize query.\n@param result The result of the Oraclize query.",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "2176:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "2189:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2175:35:4"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2218:0:4"
            },
            "scope": 769,
            "src": "2156:873:4",
            "stateMutability": "nonpayable",
            "superFunction": 1852,
            "visibility": "public"
          },
          {
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "3444:336:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 707,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "3462:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3471:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3462:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796f757420616d6f756e742073686f756c64206265206d6f7265207468616e2030",
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3474:37:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09e1817b08711be9565671f43c90bcfb3727af85192c1f3889a103eb3381f329",
                          "typeString": "literal_string \"Payout amount should be more than 0\""
                        },
                        "value": "Payout amount should be more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09e1817b08711be9565671f43c90bcfb3727af85192c1f3889a103eb3381f329",
                          "typeString": "literal_string \"Payout amount should be more than 0\""
                        }
                      ],
                      "id": 706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "3454:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:58:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 714,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "3530:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 716,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8042,
                                "src": "3548:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Roulette_$769",
                                  "typeString": "contract Roulette"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Roulette_$769",
                                  "typeString": "contract Roulette"
                                }
                              ],
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3540:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3540:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3540:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3530:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796f757420616d6f756e742073686f756c64206e6f74206265206d6f7265207468616e20636f6e74726163742062616c616e6365",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3563:56:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6541d731e06ba7195de7a0e7d5c06bdc3bd110fe478b431e9db6546fa43558dc",
                          "typeString": "literal_string \"Payout amount should not be more than contract balance\""
                        },
                        "value": "Payout amount should not be more than contract balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6541d731e06ba7195de7a0e7d5c06bdc3bd110fe478b431e9db6546fa43558dc",
                          "typeString": "literal_string \"Payout amount should not be more than contract balance\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "3522:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:98:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:98:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 723,
                      "name": "balanceForBacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "3631:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 726,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "3673:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 724,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "3651:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7438,
                        "src": "3651:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3651:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3631:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 736,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "3724:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 732,
                                "name": "winner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 699,
                                "src": "3706:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3698:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": "uint160"
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3698:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3690:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3690:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3690:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:41:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 740,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "3753:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 741,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "3761:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "3766:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 739,
                      "name": "Payout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "3746:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes32,uint256)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3746:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "EmitStatement",
                  "src": "3741:32:4"
                }
              ]
            },
            "documentation": "@notice Pays out an amount of eth to a bet winner.\n@dev Updates token price according to value change.\n@dev Emits Payout event.\n@param winner The account of the bet winner.\n@param qid The game for which the payout is made\n@param amount The amount to be paid out to the bet winner.",
            "id": 746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "3390:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3390:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "3406:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3406:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 703,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "3419:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3389:45:4"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3444:0:4"
            },
            "scope": 769,
            "src": "3374:406:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "4035:74:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "323030",
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4074:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 751,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "4052:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7497,
                        "src": "4052:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4052:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 755,
                        "name": "oraclizeFeeEstimate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "4081:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4081:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4052:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 750,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "4045:57:4"
                }
              ]
            },
            "documentation": "@notice Returns the maximum bet (0.5% of balance) for this contract.\n@dev Based on empirical statistics (see docs/max_bet_size.md).\n@return The maximum bet.",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3995:2:4"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "name": "maxBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "4019:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:16:4"
            },
            "scope": 769,
            "src": "3980:129:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "4296:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "302e303034",
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4313:11:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4000000000000000_by_1",
                      "typeString": "int_const 4000000000000000"
                    },
                    "value": "0.004"
                  },
                  "functionReturnParameters": 764,
                  "id": 766,
                  "nodeType": "Return",
                  "src": "4306:18:4"
                }
              ]
            },
            "documentation": "@notice Returns an estimate of the oraclize fee.\n@return An estimate of the oraclize fee.",
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "oraclizeFeeEstimate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4263:2:4"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "4287:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4287:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4286:9:4"
            },
            "scope": 769,
            "src": "4235:96:4",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 770,
        "src": "224:4109:4"
      }
    ],
    "src": "0:4334:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/rosco/repos/ethereum/eth.x/contracts/Roulette.sol",
    "exportedSymbols": {
      "Roulette": [
        769
      ]
    },
    "id": 770,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 476,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/rosco/repos/ethereum/eth.x/contracts/BackingContract.sol",
        "file": "./BackingContract.sol",
        "id": 477,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 403,
        "src": "25:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/rosco/repos/ethereum/eth.x/contracts/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 478,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 7117,
        "src": "57:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 479,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 7387,
        "src": "85:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 480,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7116,
              "src": "245:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7116",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 481,
            "nodeType": "InheritanceSpecifier",
            "src": "245:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 482,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7386,
              "src": "260:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$7386",
                "typeString": "contract Pausable"
              }
            },
            "id": 483,
            "nodeType": "InheritanceSpecifier",
            "src": "260:8:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 484,
              "name": "BackingContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 402,
              "src": "270:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BackingContract_$402",
                "typeString": "contract BackingContract"
              }
            },
            "id": 485,
            "nodeType": "InheritanceSpecifier",
            "src": "270:15:4"
          }
        ],
        "contractDependencies": [
          402,
          7116,
          7301,
          7386
        ],
        "contractKind": "contract",
        "documentation": "@title Roulette",
        "fullyImplemented": true,
        "id": 769,
        "linearizedBaseContracts": [
          769,
          402,
          7386,
          7301,
          7116
        ],
        "name": "Roulette",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Roulette.PlayerInfo",
            "id": 492,
            "members": [
              {
                "constant": false,
                "id": 487,
                "name": "player",
                "nodeType": "VariableDeclaration",
                "scope": 492,
                "src": "320:22:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 486,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:15:4",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 489,
                "name": "betSize",
                "nodeType": "VariableDeclaration",
                "scope": 492,
                "src": "352:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 488,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 491,
                "name": "betNumber",
                "nodeType": "VariableDeclaration",
                "scope": 492,
                "src": "377:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 490,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PlayerInfo",
            "nodeType": "StructDefinition",
            "scope": 769,
            "src": "292:107:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 496,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "405:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
              "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo)"
            },
            "typeName": {
              "id": 495,
              "keyType": {
                "id": 493,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "405:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 494,
                "name": "PlayerInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 492,
                "src": "422:10:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                  "typeString": "struct Roulette.PlayerInfo"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 506,
            "name": "Bet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "indexed": true,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "458:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 500,
                  "indexed": false,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "482:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "indexed": false,
                  "name": "betSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "495:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "indexed": false,
                  "name": "betNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "512:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "457:71:4"
            },
            "src": "448:81:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 518,
            "name": "Play",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "indexed": true,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "545:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "indexed": false,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "569:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "indexed": false,
                  "name": "betSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "582:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "name": "betNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "599:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "indexed": false,
                  "name": "winningNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "616:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:92:4"
            },
            "src": "534:103:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 526,
            "name": "Payout",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "655:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "indexed": false,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "679:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 524,
                  "indexed": false,
                  "name": "payout",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "692:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "654:53:4"
            },
            "src": "642:66:4"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "797:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 535,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 531,
                    "name": "walletAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 528,
                    "src": "774:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 532,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 530,
                  "name": "BackingContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "758:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BackingContract_$402_$",
                    "typeString": "type(contract BackingContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "758:31:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "walletAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "726:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:32:4"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:0:4"
            },
            "scope": 769,
            "src": "714:85:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "1172:584:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "1190:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1190:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 545,
                            "name": "maxBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "1203:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1203:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1190:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42657420616d6f756e742063616e206e6f7420657863656564206d6178206265742073697a65",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:40:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ea72281d4cb18f26b4db8aff3b88b8f2f00e50c75f5a430e80aa4712e748764",
                          "typeString": "literal_string \"Bet amount can not exceed max bet size\""
                        },
                        "value": "Bet amount can not exceed max bet size"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ea72281d4cb18f26b4db8aff3b88b8f2f00e50c75f5a430e80aa4712e748764",
                          "typeString": "literal_string \"Bet amount can not exceed max bet size\""
                        }
                      ],
                      "id": 542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "1182:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:72:4"
                },
                {
                  "assignments": [
                    552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 552,
                      "name": "oraclizeFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "1265:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 551,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1265:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576f6c6672616d416c706861",
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1305:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        "value": "WolframAlpha"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        }
                      ],
                      "id": 553,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1884,
                        1902
                      ],
                      "referencedDeclaration": 1884,
                      "src": "1287:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) returns (uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1265:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "1338:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1338:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 560,
                          "name": "oraclizeFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 552,
                          "src": "1350:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1338:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42657420616d6f756e742073686f756c6420626520686967686572207468616e206f7261636c697a6520666565",
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1363:47:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98eea70b75a595b66958bc23d3bea1922e7a685eedbc13e7256cf9e9ab374561",
                          "typeString": "literal_string \"Bet amount should be higher than oraclize fee\""
                        },
                        "value": "Bet amount should be higher than oraclize fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98eea70b75a595b66958bc23d3bea1922e7a685eedbc13e7256cf9e9ab374561",
                          "typeString": "literal_string \"Bet amount should be higher than oraclize fee\""
                        }
                      ],
                      "id": 557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "1330:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:81:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:81:4"
                },
                {
                  "assignments": [
                    566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "name": "betValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "1422:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1422:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 571,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8000,
                        "src": "1441:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1441:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 569,
                      "name": "oraclizeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "1453:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1441:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1422:42:4"
                },
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "name": "qid",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "1475:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1475:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 578,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576f6c6672616d416c706861",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1504:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        "value": "WolframAlpha"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72616e646f6d20696e7465676572206265747765656e203020616e64203336",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1520:33:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31eb75d01006bca80654310c3d2396372cca50656de178f344b039c1d4963c89",
                          "typeString": "literal_string \"random integer between 0 and 36\""
                        },
                        "value": "random integer between 0 and 36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31eb75d01006bca80654310c3d2396372cca50656de178f344b039c1d4963c89",
                          "typeString": "literal_string \"random integer between 0 and 36\""
                        }
                      ],
                      "id": 574,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1943,
                        1986,
                        2033,
                        2078,
                        2122,
                        2168,
                        2218,
                        2266,
                        2314,
                        2364,
                        2418,
                        2470,
                        2507,
                        2547,
                        2590,
                        2630,
                        2675,
                        2723,
                        2774,
                        2822,
                        2875,
                        2931,
                        2990,
                        3046,
                        3107,
                        3171,
                        3238,
                        3302,
                        3371,
                        3443,
                        3518,
                        3590,
                        3638,
                        3688,
                        3742,
                        3794,
                        3831,
                        3871,
                        3914,
                        3954,
                        3999,
                        4047,
                        4098,
                        4146,
                        4199,
                        4255,
                        4314,
                        4370,
                        4431,
                        4495,
                        4562,
                        4626,
                        4695,
                        4767,
                        4842,
                        4914
                      ],
                      "referencedDeclaration": 1943,
                      "src": "1489:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1475:79:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "1641:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                          "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                        }
                      },
                      "id": 581,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 580,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1649:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1641:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                        "typeString": "struct Roulette.PlayerInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 583,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "1667:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1667:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "betValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "1679:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 586,
                          "name": "number",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "1689:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 582,
                        "name": "PlayerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1656:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PlayerInfo_$492_storage_ptr_$",
                          "typeString": "type(struct Roulette.PlayerInfo storage pointer)"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1656:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PlayerInfo_$492_memory",
                        "typeString": "struct Roulette.PlayerInfo memory"
                      }
                    },
                    "src": "1641:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                      "typeString": "struct Roulette.PlayerInfo storage ref"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:55:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8000,
                          "src": "1715:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1715:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1727:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "betValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1732:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "number",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "1742:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 590,
                      "name": "Bet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "1711:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint8_$returns$__$",
                        "typeString": "function (address,bytes32,uint256,uint8)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "EmitStatement",
                  "src": "1706:43:4"
                }
              ]
            },
            "documentation": "@notice Bets an amount of eth on a specific number.\n@dev Updates token price according to value change.\n@dev Stores the player info in `players` mapping so it can be retrieved in `__callback()`.\n@dev Emits Bet event.\n@param number The number that is bet on.",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 540,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 539,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7342,
                  "src": "1158:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1158:13:4"
              }
            ],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1127:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:14:4"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:4"
            },
            "scope": 769,
            "src": "1114:642:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "2218:811:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 607,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8000,
                            "src": "2236:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2236:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 609,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4939,
                            "src": "2250:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2250:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2236:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c65642066726f6d206f7261636c697a652063616c6c6261636b2061646472657373",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2272:51:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a71b512b172bca3e3fd7c37872a153f68ca36fd7f4eb0ebf6c0b9b03923fd1d",
                          "typeString": "literal_string \"Can only be called from oraclize callback address\""
                        },
                        "value": "Can only be called from oraclize callback address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a71b512b172bca3e3fd7c37872a153f68ca36fd7f4eb0ebf6c0b9b03923fd1d",
                          "typeString": "literal_string \"Can only be called from oraclize callback address\""
                        }
                      ],
                      "id": 606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "2228:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:96:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:96:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 616,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "2342:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                              }
                            },
                            "id": 618,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 617,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "2350:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2342:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                              "typeString": "struct Roulette.PlayerInfo storage ref"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "player",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 487,
                          "src": "2342:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2373:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2365:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2365:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2342:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5175657279206e6565647320616e206173736f63696174656420706c61796572",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2377:34:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5716a7205318af468f3f2813b80b9792272c494e747b810619d9fb89d44f407",
                          "typeString": "literal_string \"Query needs an associated player\""
                        },
                        "value": "Query needs an associated player"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5716a7205318af468f3f2813b80b9792272c494e747b810619d9fb89d44f407",
                          "typeString": "literal_string \"Query needs an associated player\""
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "2334:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:78:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:78:4"
                },
                {
                  "assignments": [
                    628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 628,
                      "name": "winningNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 696,
                      "src": "2423:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 627,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2423:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 634,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 631,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 603,
                            "src": "2460:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 630,
                          "name": "parseInt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            5772,
                            5889
                          ],
                          "referencedDeclaration": 5772,
                          "src": "2451:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (string memory) pure returns (uint256)"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2451:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2445:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2445:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2423:45:4"
                },
                {
                  "assignments": [
                    636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 636,
                      "name": "playerInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 696,
                      "src": "2478:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                        "typeString": "struct Roulette.PlayerInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 635,
                        "name": "PlayerInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 492,
                        "src": "2478:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                          "typeString": "struct Roulette.PlayerInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 640,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 637,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "2510:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                        "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                      }
                    },
                    "id": 639,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "qid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "2518:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2510:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                      "typeString": "struct Roulette.PlayerInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2478:44:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 642,
                          "name": "playerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "2543:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                            "typeString": "struct Roulette.PlayerInfo storage pointer"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "player",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 487,
                        "src": "2543:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "2562:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 645,
                          "name": "playerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "2567:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                            "typeString": "struct Roulette.PlayerInfo storage pointer"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "betSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 489,
                        "src": "2567:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 647,
                          "name": "playerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "2587:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                            "typeString": "struct Roulette.PlayerInfo storage pointer"
                          }
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "betNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 491,
                        "src": "2587:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "winningNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "2609:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 641,
                      "name": "Play",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "2538:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,bytes32,uint256,uint8,uint8)"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:85:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "EmitStatement",
                  "src": "2533:90:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 652,
                      "name": "balanceForBacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "2633:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 655,
                            "name": "playerInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "2675:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                              "typeString": "struct Roulette.PlayerInfo storage pointer"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "betSize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 489,
                          "src": "2675:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 653,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "2653:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7413,
                        "src": "2653:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2653:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2633:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:61:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "playerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "2709:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                          "typeString": "struct Roulette.PlayerInfo storage pointer"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "betNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 491,
                      "src": "2709:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 662,
                      "name": "winningNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "2733:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2709:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 694,
                    "nodeType": "Block",
                    "src": "2979:44:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2993:19:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 689,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "3000:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                              }
                            },
                            "id": 691,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 690,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "3008:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3000:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                              "typeString": "struct Roulette.PlayerInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 693,
                        "nodeType": "ExpressionStatement",
                        "src": "2993:19:4"
                      }
                    ]
                  },
                  "id": 695,
                  "nodeType": "IfStatement",
                  "src": "2705:318:4",
                  "trueBody": {
                    "id": 688,
                    "nodeType": "Block",
                    "src": "2748:225:4",
                    "statements": [
                      {
                        "assignments": [
                          665
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 665,
                            "name": "playerAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 688,
                            "src": "2762:29:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 664,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2762:15:4",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 668,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 666,
                            "name": "playerInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "2794:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                              "typeString": "struct Roulette.PlayerInfo storage pointer"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "player",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 487,
                          "src": "2794:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2762:49:4"
                      },
                      {
                        "assignments": [
                          670
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 670,
                            "name": "payoutAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 688,
                            "src": "2825:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 669,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2825:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 676,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3336",
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2871:2:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 671,
                                "name": "playerInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 636,
                                "src": "2848:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PlayerInfo_$492_storage_ptr",
                                  "typeString": "struct Roulette.PlayerInfo storage pointer"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "betSize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 489,
                              "src": "2848:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7472,
                            "src": "2848:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2848:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2825:49:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2888:19:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 677,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "2895:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PlayerInfo_$492_storage_$",
                                "typeString": "mapping(bytes32 => struct Roulette.PlayerInfo storage ref)"
                              }
                            },
                            "id": 679,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 678,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "2903:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2895:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerInfo_$492_storage",
                              "typeString": "struct Roulette.PlayerInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "2888:19:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 683,
                              "name": "playerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 665,
                              "src": "2929:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 684,
                              "name": "qid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "2944:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 685,
                              "name": "payoutAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "2949:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 682,
                            "name": "payout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "2922:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes32,uint256)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2922:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "2922:40:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Callback function for Oraclize, checks if the player won the bet, and payd out if they did.\n@dev Uses the `players` mapping to retrieve a player's information, deletes the player information afterwards.\n@dev Emits Play event.\n@param qid The query id of the corresponding Oraclize query.\n@param result The result of the Oraclize query.",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "2176:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "2189:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2175:35:4"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2218:0:4"
            },
            "scope": 769,
            "src": "2156:873:4",
            "stateMutability": "nonpayable",
            "superFunction": 1852,
            "visibility": "public"
          },
          {
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "3444:336:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 707,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "3462:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3471:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3462:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796f757420616d6f756e742073686f756c64206265206d6f7265207468616e2030",
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3474:37:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09e1817b08711be9565671f43c90bcfb3727af85192c1f3889a103eb3381f329",
                          "typeString": "literal_string \"Payout amount should be more than 0\""
                        },
                        "value": "Payout amount should be more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09e1817b08711be9565671f43c90bcfb3727af85192c1f3889a103eb3381f329",
                          "typeString": "literal_string \"Payout amount should be more than 0\""
                        }
                      ],
                      "id": 706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "3454:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:58:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 714,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "3530:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 716,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8042,
                                "src": "3548:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Roulette_$769",
                                  "typeString": "contract Roulette"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Roulette_$769",
                                  "typeString": "contract Roulette"
                                }
                              ],
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3540:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3540:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3540:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3530:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796f757420616d6f756e742073686f756c64206e6f74206265206d6f7265207468616e20636f6e74726163742062616c616e6365",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3563:56:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6541d731e06ba7195de7a0e7d5c06bdc3bd110fe478b431e9db6546fa43558dc",
                          "typeString": "literal_string \"Payout amount should not be more than contract balance\""
                        },
                        "value": "Payout amount should not be more than contract balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6541d731e06ba7195de7a0e7d5c06bdc3bd110fe478b431e9db6546fa43558dc",
                          "typeString": "literal_string \"Payout amount should not be more than contract balance\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8004
                      ],
                      "referencedDeclaration": 8004,
                      "src": "3522:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:98:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:98:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 723,
                      "name": "balanceForBacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "3631:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 726,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "3673:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 724,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "3651:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7438,
                        "src": "3651:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3651:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3631:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 736,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "3724:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 732,
                                "name": "winner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 699,
                                "src": "3706:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3698:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": "uint160"
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3698:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3690:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3690:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3690:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:41:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 740,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "3753:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 741,
                        "name": "qid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "3761:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "3766:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 739,
                      "name": "Payout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "3746:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes32,uint256)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3746:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "EmitStatement",
                  "src": "3741:32:4"
                }
              ]
            },
            "documentation": "@notice Pays out an amount of eth to a bet winner.\n@dev Updates token price according to value change.\n@dev Emits Payout event.\n@param winner The account of the bet winner.\n@param qid The game for which the payout is made\n@param amount The amount to be paid out to the bet winner.",
            "id": 746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "3390:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3390:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "name": "qid",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "3406:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3406:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 703,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "3419:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3389:45:4"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3444:0:4"
            },
            "scope": 769,
            "src": "3374:406:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "4035:74:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "323030",
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4074:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 751,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "4052:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7497,
                        "src": "4052:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4052:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 755,
                        "name": "oraclizeFeeEstimate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "4081:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4081:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4052:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 750,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "4045:57:4"
                }
              ]
            },
            "documentation": "@notice Returns the maximum bet (0.5% of balance) for this contract.\n@dev Based on empirical statistics (see docs/max_bet_size.md).\n@return The maximum bet.",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3995:2:4"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "name": "maxBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "4019:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:16:4"
            },
            "scope": 769,
            "src": "3980:129:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "4296:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "302e303034",
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4313:11:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4000000000000000_by_1",
                      "typeString": "int_const 4000000000000000"
                    },
                    "value": "0.004"
                  },
                  "functionReturnParameters": 764,
                  "id": 766,
                  "nodeType": "Return",
                  "src": "4306:18:4"
                }
              ]
            },
            "documentation": "@notice Returns an estimate of the oraclize fee.\n@return An estimate of the oraclize fee.",
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "oraclizeFeeEstimate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4263:2:4"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "4287:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4287:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4286:9:4"
            },
            "scope": 769,
            "src": "4235:96:4",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 770,
        "src": "224:4109:4"
      }
    ],
    "src": "0:4334:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x214ae1d1aa57aeaec2e90ff231808911a5a626a3c6bc242503a829db732011ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "qid",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "betSize",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "betNumber",
              "type": "uint8"
            }
          ],
          "name": "Bet",
          "type": "event",
          "signature": "0x214ae1d1aa57aeaec2e90ff231808911a5a626a3c6bc242503a829db732011ce"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event",
          "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
        },
        "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserAdded",
          "type": "event",
          "signature": "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        },
        "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserRemoved",
          "type": "event",
          "signature": "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e"
        },
        "0x212950d8b6a2784adeaa8e088d070610bdfab9eaef5a7127d90118ec1cf34a61": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "qid",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ],
          "name": "Payout",
          "type": "event",
          "signature": "0x212950d8b6a2784adeaa8e088d070610bdfab9eaef5a7127d90118ec1cf34a61"
        },
        "0x91be5b5d42b869d0275147918e4b559f9d2d696bc711937642c9363242ef1100": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "qid",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "betSize",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "betNumber",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "winningNumber",
              "type": "uint8"
            }
          ],
          "name": "Play",
          "type": "event",
          "signature": "0x91be5b5d42b869d0275147918e4b559f9d2d696bc711937642c9363242ef1100"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event",
          "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
        }
      },
      "links": {},
      "address": "0x7b99BCBA63d9197440D9Fd8Ab649b152a5619371",
      "transactionHash": "0x60010c816c5d190f00539eb6da7f375d7487124dd150d004daaff8c8ed765716"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-01-05T14:56:29.037Z",
  "devdoc": {
    "author": "Aniruddh Radhakrishnan and Shivansh Singh",
    "methods": {
      "__callback(bytes32,string)": {
        "details": "Uses the `players` mapping to retrieve a player's information, deletes the player information afterwards.Emits Play event.",
        "params": {
          "qid": "The query id of the corresponding Oraclize query.",
          "result": "The result of the Oraclize query."
        }
      },
      "bet(uint8)": {
        "details": "Updates token price according to value change.Stores the player info in `players` mapping so it can be retrieved in `__callback()`.Emits Bet event.",
        "params": {
          "number": "The number that is bet on."
        }
      },
      "deposit()": {
        "details": "Funds are added to balanceForBacking as well."
      },
      "maxBet()": {
        "details": "Based on empirical statistics (see docs/max_bet_size.md).",
        "return": "The maximum bet."
      },
      "oraclizeFeeEstimate()": {
        "return": "An estimate of the oraclize fee."
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      },
      "withdraw(uint256)": {
        "details": "Funds are removed from balanceForBacking as well.",
        "params": {
          "ethAmount": "The amount of eth to withdraw."
        }
      }
    },
    "title": "Roulette"
  },
  "userdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "notice": "Callback function for Oraclize, checks if the player won the bet, and payd out if they did."
      },
      "bet(uint8)": {
        "notice": "Bets an amount of eth on a specific number."
      },
      "deposit()": {
        "notice": "Allows the backed token to deposit funds into the contract."
      },
      "maxBet()": {
        "notice": "Returns the maximum bet (0.5% of balance) for this contract."
      },
      "oraclizeFeeEstimate()": {
        "notice": "Returns an estimate of the oraclize fee."
      },
      "withdraw(uint256)": {
        "notice": "Allows the backed token to withdraw funds from the contract."
      }
    }
  }
}
